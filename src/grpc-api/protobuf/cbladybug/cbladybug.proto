syntax = "proto3";

import "gogoproto/gogo.proto";

package cbladybug;

//////////////////////////////////
// 공통 메시지 정의
//////////////////////////////////

// Empty 메시지 정의
message Empty {}

// MessageResponse 응답 메시지 정의
message MessageResponse {
	string message = 1 [json_name="message", (gogoproto.jsontag) = "message", (gogoproto.moretags) = "yaml:\"message\""];
}

// StatusResponse 응답 메시지 정의
message StatusResponse {
	string kind = 1 [json_name="kind", (gogoproto.jsontag) = "kind", (gogoproto.moretags) = "yaml:\"kind\""];
	int32 code = 2 [json_name="code", (gogoproto.jsontag) = "code", (gogoproto.moretags) = "yaml:\"code\""];
	string message = 3 [json_name="message", (gogoproto.jsontag) = "message", (gogoproto.moretags) = "yaml:\"message\""];
}

//////////////////////////////////
// CB LADYBUG GRPC 서비스 정의
//////////////////////////////////

service MCAR {

	rpc Healthy (Empty) returns (MessageResponse) {}

	rpc CreateCluster (ClusterCreateRequest) returns (ClusterInfoResponse) {}
	rpc ListCluster (ClusterAllQryRequest) returns (ListClusterInfoResponse) {}
	rpc GetCluster (ClusterQryRequest) returns (ClusterInfoResponse) {}
	rpc DeleteCluster (ClusterQryRequest) returns (StatusResponse) {}

	rpc AddNode (NodeCreateRequest) returns (ListNodeInfoResponse) {}
	rpc ListNode (NodeAllQryRequest) returns (ListNodeInfoResponse) {}
	rpc GetNode (NodeQryRequest) returns (NodeInfoResponse) {}
	rpc RemoveNode (NodeQryRequest) returns (StatusResponse) {}
}

//////////////////////////////////
// ClUSTER 메시지 정의
//////////////////////////////////

message ClusterInfoResponse {
	ClusterInfo item = 1 [json_name="item", (gogoproto.jsontag) = "item", (gogoproto.moretags) = "yaml:\"item\""];
}

message ListClusterInfoResponse {
	string kind = 1 [json_name="kind", (gogoproto.jsontag) = "kind", (gogoproto.moretags) = "yaml:\"kind\""];
	repeated ClusterInfo items = 2 [json_name="items", (gogoproto.jsontag) = "items", (gogoproto.moretags) = "yaml:\"items\""];
}

message ClusterInfo {
	string name = 1 [json_name="name", (gogoproto.jsontag) = "name", (gogoproto.moretags) = "yaml:\"name\""];
	string kind = 2 [json_name="kind", (gogoproto.jsontag) = "kind", (gogoproto.moretags) = "yaml:\"kind\""];
	string status = 3 [json_name="status", (gogoproto.jsontag) = "status", (gogoproto.moretags) = "yaml:\"status\""];     
	string uid = 4 [json_name="uid", (gogoproto.jsontag) = "uid", (gogoproto.moretags) = "yaml:\"uid\""];     
	string mcis = 5 [json_name="mcis", (gogoproto.jsontag) = "mcis", (gogoproto.moretags) = "yaml:\"mcis\""];     
	string namespace = 6 [json_name="namespace", (gogoproto.jsontag) = "namespace", (gogoproto.moretags) = "yaml:\"namespace\""];     
	string cluster_config = 7 [json_name="clusterConfig", (gogoproto.jsontag) = "clusterConfig", (gogoproto.moretags) = "yaml:\"clusterConfig\""];
	string cp_leader = 8 [json_name="cpLeader", (gogoproto.jsontag) = "cpLeader", (gogoproto.moretags) = "yaml:\"cpLeader\""];
	string network_cni = 9 [json_name="networkCni", (gogoproto.jsontag) = "networkCni", (gogoproto.moretags) = "yaml:\"networkCni\""];
	repeated NodeInfo nodes = 10 [json_name="nodes", (gogoproto.jsontag) = "nodes", (gogoproto.moretags) = "yaml:\"nodes\""];     
}

message ClusterCreateRequest {
	string namespace = 1 [json_name="namespace", (gogoproto.jsontag) = "namespace", (gogoproto.moretags) = "yaml:\"namespace\""];   
	ClusterCreateInfo item = 2 [json_name="ReqInfo", (gogoproto.jsontag) = "ReqInfo", (gogoproto.moretags) = "yaml:\"ReqInfo\""]; 
}

message ClusterCreateInfo {
	string name = 1 [json_name="name", (gogoproto.jsontag) = "name", (gogoproto.moretags) = "yaml:\"name\""];  
	repeated NodeConfig control_plane = 2 [json_name="controlPlane", (gogoproto.jsontag) = "controlPlane", (gogoproto.moretags) = "yaml:\"controlPlane\""];  
	repeated NodeConfig worker = 3 [json_name="worker", (gogoproto.jsontag) = "worker", (gogoproto.moretags) = "yaml:\"worker\""];  
	Config config = 4 [json_name="config", (gogoproto.jsontag) = "config", (gogoproto.moretags) = "yaml:\"config\""];  
}

message NodeConfig {
	string connection = 1 [json_name="connection", (gogoproto.jsontag) = "connection", (gogoproto.moretags) = "yaml:\"connection\""];  
	int32 count = 2 [json_name="count", (gogoproto.jsontag) = "count", (gogoproto.moretags) = "yaml:\"count\""];  
	string spec = 3 [json_name="spec", (gogoproto.jsontag) = "spec", (gogoproto.moretags) = "yaml:\"spec\""];  
}

message Config {
	Kubernetes kubernetes = 1 [json_name="kubernetes", (gogoproto.jsontag) = "kubernetes", (gogoproto.moretags) = "yaml:\"kubernetes\""];  
}

message Kubernetes {
	string network_cni = 1 [json_name="networkCni", (gogoproto.jsontag) = "networkCni", (gogoproto.moretags) = "yaml:\"networkCni\""];  
	string pod_cidr = 2 [json_name="podCidr", (gogoproto.jsontag) = "podCidr", (gogoproto.moretags) = "yaml:\"podCidr\""];  
	string service_cidr = 3 [json_name="serviceCidr", (gogoproto.jsontag) = "serviceCidr", (gogoproto.moretags) = "yaml:\"serviceCidr\""];  
	string servic_dns_domain = 4 [json_name="serviceDnsDomain", (gogoproto.jsontag) = "serviceDnsDomain", (gogoproto.moretags) = "yaml:\"serviceDnsDomain\""];  
}

message ClusterAllQryRequest {
	string namespace = 1 [json_name="namespace", (gogoproto.jsontag) = "namespace", (gogoproto.moretags) = "yaml:\"namespace\""];     
}

message ClusterQryRequest {
	string namespace = 1 [json_name="namespace", (gogoproto.jsontag) = "namespace", (gogoproto.moretags) = "yaml:\"namespace\""]; 
	string cluster = 2 [json_name="cluster", (gogoproto.jsontag) = "cluster", (gogoproto.moretags) = "yaml:\"cluster\""]; 
}

//////////////////////////////////
// NODE 메시지 정의
//////////////////////////////////

message NodeInfoResponse {
	NodeInfo item = 1 [json_name="item", (gogoproto.jsontag) = "item", (gogoproto.moretags) = "yaml:\"item\""];
}

message ListNodeInfoResponse {
	string kind = 1 [json_name="kind", (gogoproto.jsontag) = "kind", (gogoproto.moretags) = "yaml:\"kind\""];
	repeated NodeInfo items = 2 [json_name="items", (gogoproto.jsontag) = "items", (gogoproto.moretags) = "yaml:\"items\""];
}

message NodeInfo {
	string name = 1 [json_name="name", (gogoproto.jsontag) = "name", (gogoproto.moretags) = "yaml:\"name\""];
	string kind = 2 [json_name="kind", (gogoproto.jsontag) = "kind", (gogoproto.moretags) = "yaml:\"kind\""];
	string credential = 3 [json_name="credential", (gogoproto.jsontag) = "credential", (gogoproto.moretags) = "yaml:\"credential\""]; 
	string public_ip = 4 [json_name="publicIp", (gogoproto.jsontag) = "publicIp", (gogoproto.moretags) = "yaml:\"publicIp\""];
	string uid = 5 [json_name="uid", (gogoproto.jsontag) = "uid", (gogoproto.moretags) = "yaml:\"uid\""];
	string role = 6 [json_name="role", (gogoproto.jsontag) = "role", (gogoproto.moretags) = "yaml:\"role\""];
	string spec = 7 [json_name="spec", (gogoproto.jsontag) = "spec", (gogoproto.moretags) = "yaml:\"spec\""];
	string csp = 8 [json_name="csp", (gogoproto.jsontag) = "csp", (gogoproto.moretags) = "yaml:\"csp\""];
}

message NodeCreateRequest {
	string namespace = 1 [json_name="namespace", (gogoproto.jsontag) = "namespace", (gogoproto.moretags) = "yaml:\"namespace\""];   
	string cluster = 2 [json_name="cluster", (gogoproto.jsontag) = "cluster", (gogoproto.moretags) = "yaml:\"cluster\""];   
	NodeCreateInfo item = 3 [json_name="ReqInfo", (gogoproto.jsontag) = "ReqInfo", (gogoproto.moretags) = "yaml:\"ReqInfo\""]; 
}

message NodeCreateInfo {
	repeated NodeConfig control_plane = 1 [json_name="controlPlane", (gogoproto.jsontag) = "controlPlane", (gogoproto.moretags) = "yaml:\"controlPlane\""];  
	repeated NodeConfig worker = 2 [json_name="worker", (gogoproto.jsontag) = "worker", (gogoproto.moretags) = "yaml:\"worker\""];  
}

message NodeAllQryRequest {
	string namespace = 1 [json_name="namespace", (gogoproto.jsontag) = "namespace", (gogoproto.moretags) = "yaml:\"namespace\""];     
	string cluster = 2 [json_name="cluster", (gogoproto.jsontag) = "cluster", (gogoproto.moretags) = "yaml:\"cluster\""];
}

message NodeQryRequest {
	string namespace = 1 [json_name="namespace", (gogoproto.jsontag) = "namespace", (gogoproto.moretags) = "yaml:\"namespace\""]; 
	string cluster = 2 [json_name="cluster", (gogoproto.jsontag) = "cluster", (gogoproto.moretags) = "yaml:\"cluster\""]; 
	string node = 3 [json_name="node", (gogoproto.jsontag) = "node", (gogoproto.moretags) = "yaml:\"node\""]; 
}
